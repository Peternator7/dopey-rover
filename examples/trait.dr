
interface Mappable {
    map fn target;
    lift target;
}

OptionMappable = new Mappable {
    lift target = new { Some with value: target }
    map fn target = target.Value && self.lift (fn target.Value) || None
}

None = new {};
Some = new {};

True = new {};
False = new {};

function SafeDivide a b = Monad.bind a (value => if b == 0 { None } else { { Some with } });

function SafeDivide a b = {
    @set(OptionMappable, Some)
    context = @get(Mappable, Some)
    Monad.bind a (value)
}


function unpack_http_request req = {
    match req {
        { Method: Get } => None
    }
}
